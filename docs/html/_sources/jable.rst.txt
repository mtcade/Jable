The `JyFrame` Class
####################

The `JyFrame` can be treated like tabular data, indexed by a row integer and column string.

.. autoclass:: jable.JyFrame
    :members: keys, keys_fixed, get_fixed, get_fixed_withDefaultDict, as_dict, does_matchIndex, any_matchingIndices, get_matchingIndices, set_where, append, remove, remove_where, write_file

Iterating over it gives each row as a dictionary.

Get one or many items with bracket notation:

.. automethod:: jable.JyFrame.__getitem__

Filters with `JyFilter`
*************************

.. code:: python
   
   JyFilter: type = dict[ str, any ] | Callable[ dict[ str, any ], bool ]

A JyFilter is either a lambda run on a row (dictionary) returning a `bool`, or a dictionary which will return `True` if every value of a row matches those in the filter. It can be written by hand without instantiating any class, just the `lambda` or `dict`. Several methods and functions use `JyFilter`:
    - ``jable.JyFrame.does_matchIndex()``
    - ``jable.JyFrame.any_matchingIdices()``
    - ``jable.JyFrame.get_matchingIndices()``
    - ``jable.JyFrame.set_where()``
    - ``jable.JyFrame.remove_where()``
    - ``jable.filter()``
    - ``jable.filter_returnFirst()``
    - ``jable.filter_expectOne()``


Other Module Functions
************************

Used for getting new `JyFrame`, rows, and other values without modifying any existing `JyFrame`

Initializing
=============

.. autofunction:: jable.fromHeaders

.. autofunction:: jable.likeJyFrame

.. autofunction:: jable.fromFile

.. autofunction:: jable.from_file

.. autofunction:: jable.fromFile_shift

Filter Functions
==================

.. autofunction:: jable.filter

.. autofunction:: jable.filter_returnFirst

.. autofunction:: jable.filter_expectOne

Other transformations
========================

.. autofunction:: jable.sortedBy


